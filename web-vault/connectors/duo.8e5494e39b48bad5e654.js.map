{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/connectors/duo.ts","webpack:///./src/connectors/duo.scss?3558","webpack:///./src/connectors/common.ts","webpack:///./node_modules/duo_web_sdk/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","document","addEventListener","event","frameElement","createElement","setAttribute","setFrameHeight","body","appendChild","hostParam","getQsParam","requestParam","hostUrl","URL","style","height","window","innerHeight","hostname","endsWith","DuoWebSDK","init","iframe","host","sig_request","submit_callback","form","data","invokeCSharpAction","err","console","log","invokeCSCode","elements","sig_response","onresize","url","location","href","replace","results","RegExp","exec","decodeURIComponent","str","Array","map","atob","charCodeAt","toString","slice","join","postAction","postArgument","duoSig","appSig","submitCallback","DUO_MESSAGE_FORMAT","DUO_ERROR_FORMAT","DUO_OPEN_WINDOW_FORMAT","VALID_OPEN_WINDOW_DOMAINS","initializeStatefulVariables","undefined","throwError","message","givenUrl","Error","hyphenize","toLowerCase","getDataAttribute","element","dataset","getAttribute","on","context","fallbackEvent","callback","attachEvent","off","removeEventListener","detachEvent","onReady","offReady","onMessage","offMessage","parseSigRequest","sig","indexOf","split","length","sigParts","sigRequest","isDuoMessage","Boolean","origin","match","options","post_action","post_argument","promptElement","getPromptElement","ready","iframeAttributes","asyncReady","result","iframeContainer","validateIframe","getUserDefinedElement","validateIframeContainer","getElementById","tagName","isIframe","generateIframeSrc","encodeURIComponent","onReceivedMessage","substring","isValidUrlToOpen","open","doPostBack","parser","protocol","src","firstChild","removeChild","response","input","type","parentElement","insertBefore","nextSibling","method","action","submit","_onReady","_parseSigRequest","_isDuoMessage","_doPostBack"],"mappings":"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","file":"connectors/duo.8e5494e39b48bad5e654.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1321);\n","import * as DuoWebSDK from 'duo_web_sdk';\nimport { getQsParam } from './common';\n\n// tslint:disable-next-line\nrequire('./duo.scss');\n\ndocument.addEventListener('DOMContentLoaded', event => {\n    const frameElement = document.createElement('iframe');\n    frameElement.setAttribute('id', 'duo_iframe');\n    setFrameHeight();\n    document.body.appendChild(frameElement);\n\n    const hostParam = getQsParam('host');\n    const requestParam = getQsParam('request');\n\n    const hostUrl = new URL('https://' + hostParam);\n    if (!hostUrl.hostname.endsWith('.duosecurity.com') && !hostUrl.hostname.endsWith('.duofederal.com')) {\n        return;\n    }\n\n    DuoWebSDK.init({\n        iframe: 'duo_iframe',\n        host: hostParam,\n        sig_request: requestParam,\n        submit_callback: (form: any) => {\n            invokeCSCode(form.elements.sig_response.value);\n        },\n    });\n\n    window.onresize = setFrameHeight;\n\n    function setFrameHeight() {\n        frameElement.style.height = window.innerHeight + 'px';\n    }\n});\n\nfunction invokeCSCode(data: string) {\n    try {\n        (window as any).invokeCSharpAction(data);\n    } catch (err) {\n        // tslint:disable-next-line\n        console.log(err);\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport {};","export function getQsParam(name: string) {\n    const url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n    const results = regex.exec(url);\n\n    if (!results) {\n        return null;\n    }\n    if (!results[2]) {\n        return '';\n    }\n\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nexport function b64Decode(str: string) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), (c: string) => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n","/**\n * Duo Web SDK v2\n * Copyright 2021, Duo Security\n */\n\n(function (root, factory) {\n    /*eslint-disable */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    /*eslint-enable */\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        var Duo = factory();\n        // If the Javascript was loaded via a script tag, attempt to autoload\n        // the frame.\n        Duo._onReady(Duo.init);\n\n        // Attach Duo to the `window` object\n        root.Duo = Duo;\n  }\n}(this, function() {\n    var DUO_MESSAGE_FORMAT = /^(?:AUTH|ENROLL)+\\|[A-Za-z0-9\\+\\/=]+\\|[A-Za-z0-9\\+\\/=]+$/;\n    var DUO_ERROR_FORMAT = /^ERR\\|[\\w\\s\\.\\(\\)]+$/;\n    var DUO_OPEN_WINDOW_FORMAT = /^DUO_OPEN_WINDOW\\|/;\n    var VALID_OPEN_WINDOW_DOMAINS = [\n        'duo.com',\n        'duosecurity.com',\n        'duomobile.s3-us-west-1.amazonaws.com'\n    ];\n\n    var postAction,\n        postArgument,\n        host,\n        sigRequest,\n        duoSig,\n        appSig,\n        iframe,\n        submitCallback;\n\n    // We use this function instead of setting initial values in the var\n    // declarations to make sure the initial values and subsequent\n    // re-initializations are always the same.\n    initializeStatefulVariables();\n\n    /**\n     * Set local variables to whatever they should be before you call init().\n     */\n    function initializeStatefulVariables() {\n        postAction = '';\n        postArgument = 'sig_response';\n        host = undefined;\n        sigRequest = undefined;\n        duoSig = undefined;\n        appSig = undefined;\n        iframe = undefined;\n        submitCallback = undefined;\n    }\n\n    function throwError(message, givenUrl) {\n        var url = (\n            givenUrl ||\n            'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n        );\n        throw new Error(\n            'Duo Web SDK error: ' + message +\n            (url ? ('\\n' + 'See ' + url + ' for more information') : '')\n        );\n    }\n\n    function hyphenize(str) {\n        return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase();\n    }\n\n    // cross-browser data attributes\n    function getDataAttribute(element, name) {\n        if ('dataset' in element) {\n            return element.dataset[name];\n        } else {\n            return element.getAttribute('data-' + hyphenize(name));\n        }\n    }\n\n    // cross-browser event binding/unbinding\n    function on(context, event, fallbackEvent, callback) {\n        if ('addEventListener' in window) {\n            context.addEventListener(event, callback, false);\n        } else {\n            context.attachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function off(context, event, fallbackEvent, callback) {\n        if ('removeEventListener' in window) {\n            context.removeEventListener(event, callback, false);\n        } else {\n            context.detachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function onReady(callback) {\n        on(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function offReady(callback) {\n        off(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function onMessage(callback) {\n        on(window, 'message', 'onmessage', callback);\n    }\n\n    function offMessage(callback) {\n        off(window, 'message', 'onmessage', callback);\n    }\n\n    /**\n     * Parse the sig_request parameter, throwing errors if the token contains\n     * a server error or if the token is invalid.\n     *\n     * @param {String} sig Request token\n     */\n    function parseSigRequest(sig) {\n        if (!sig) {\n            // nothing to do\n            return;\n        }\n\n        // see if the token contains an error, throwing it if it does\n        if (sig.indexOf('ERR|') === 0) {\n            throwError(sig.split('|')[1]);\n        }\n\n        // validate the token\n        if (sig.indexOf(':') === -1 || sig.split(':').length !== 2) {\n            throwError(\n                'Duo was given a bad token.  This might indicate a configuration ' +\n                'problem with one of Duo\\'s client libraries.'\n            );\n        }\n\n        var sigParts = sig.split(':');\n\n        // hang on to the token, and the parsed duo and app sigs\n        sigRequest = sig;\n        duoSig = sigParts[0];\n        appSig = sigParts[1];\n\n        return {\n            sigRequest: sig,\n            duoSig: sigParts[0],\n            appSig: sigParts[1]\n        };\n    }\n\n    /**\n     * Validate that a MessageEvent came from the Duo service, and that it\n     * is a properly formatted payload.\n     *\n     * The Google Chrome sign-in page injects some JS into pages that also\n     * make use of postMessage, so we need to do additional validation above\n     * and beyond the origin.\n     *\n     * @param {MessageEvent} event Message received via postMessage\n     */\n    function isDuoMessage(event) {\n        return Boolean(\n            event.origin === ('https://' + host) &&\n            typeof event.data === 'string' &&\n            (\n                event.data.match(DUO_MESSAGE_FORMAT) ||\n                event.data.match(DUO_ERROR_FORMAT) ||\n                event.data.match(DUO_OPEN_WINDOW_FORMAT)\n            )\n        );\n    }\n\n    /**\n     * Validate the request token and prepare for the iframe to become ready.\n     *\n     * All options below can be passed into an options hash to `Duo.init`, or\n     * specified on the iframe using `data-` attributes.\n     *\n     * Options specified using the options hash will take precedence over\n     * `data-` attributes.\n     *\n     * Example using options hash:\n     * ```javascript\n     * Duo.init({\n     *     iframe: \"some_other_id\",\n     *     host: \"api-main.duo.test\",\n     *     sig_request: \"...\",\n     *     post_action: \"/auth\",\n     *     post_argument: \"resp\"\n     * });\n     * ```\n     *\n     * Example using `data-` attributes:\n     * ```html\n     * <iframe id=\"duo_iframe\"\n     *         data-host=\"api-main.duo.test\"\n     *         data-sig-request=\"...\"\n     *         data-post-action=\"/auth\"\n     *         data-post-argument=\"resp\"\n     *         >\n     * </iframe>\n     * ```\n     *\n     * Some browsers (especially embedded browsers) don't like it when the Duo\n     * Web SDK changes the `src` attribute on the iframe. To prevent this, there\n     * is an alternative way to use the Duo Web SDK:\n     *\n     * Add a div (or any other container element) instead of an iframe to the\n     * DOM with an id of \"duo_iframe\", or pass that element to the\n     * `iframeContainer` parameter of `Duo.init`. An iframe will be created and\n     * inserted into that container element, preventing `src` change related\n     * bugs. WARNING: All other elements in the container will be deleted.\n     *\n     * The `iframeAttributes` parameter of `Duo.init` is available to set any\n     * attributes on the inserted iframe if the Duo Web SDK is inserting the\n     * iframe. For details, see the parameter documentation below.\n     *\n     * @param {Object} options\n     * @param {String} options.host - Hostname for the Duo Prompt.\n     * @param {String} options.sig_request - Request token.\n     * @param {String|HTMLElement} [options.iframe] - The iframe, or id of an\n     *     iframe that will be used for the Duo Prompt. If you don't provide\n     *     this or the `iframeContainer` parameter the Duo Web SDK will default\n     *     to using whatever element has an id of \"duo_iframe\".\n     * @param {String|HTMLElement} [options.iframeContainer] - The element you\n     *     want the Duo Prompt inserted into, or the id of that element.\n     *     Anything inside this element will be deleted and replaced with an\n     *     iframe hosting the Duo prompt. If you don't provide this or the\n     *     `iframe` parameter the Duo Web SDK will default to using whatever\n     *     element has an id of \"duo_iframe\".\n     * @param {Object} [options.iframeAttributes] - Object with  names and\n     *     values coresponding to attributes you want added to the  Duo Prompt\n     *     iframe, like `title`, `width` and `allow`. WARNING: this parameter\n     *     only works if you use the `iframeContainer` parameter or add an id\n     *     of \"duo_iframe\" to an element that isn't an iframe. If you have\n     *     added an iframe to the DOM yourself, you should set those attributes\n     *     directly on the iframe.\n     * @param {String} [options.post_action=''] - URL to POST back to after a\n     *     successful auth.\n     * @param {String} [options.post_argument='sig_response'] - Parameter name\n     *     to use for response token.\n     * @param {Function} [options.submit_callback] - If provided, the Duo Web\n     *     SDK will not submit the form. Instead it will execute this callback\n     *     function passing in a reference to the \"duo_form\" form object.\n     *     `submit_callback`` can be used to prevent the webpage from reloading.\n     */\n    function init(options) {\n        // If init() is called more than once we have to reset all the local\n        // variables to ensure init() will work the same way every time. This\n        // helps people making single page applications. SPAs may periodically\n        // remove the iframe and add a new one that has to be initialized.\n        initializeStatefulVariables();\n\n        if (options) {\n            if (options.host) {\n                host = options.host;\n            }\n\n            if (options.sig_request) {\n                parseSigRequest(options.sig_request);\n            }\n\n            if (options.post_action) {\n                postAction = options.post_action;\n            }\n\n            if (options.post_argument) {\n                postArgument = options.post_argument;\n            }\n\n            if (typeof options.submit_callback === 'function') {\n                submitCallback = options.submit_callback;\n            }\n        }\n\n        var promptElement = getPromptElement(options);\n        if (promptElement) {\n            // If we can get the element that will host the prompt, set it.\n            ready(promptElement, options.iframeAttributes || {});\n        } else {\n            // If the element that will host the prompt isn't available yet, set\n            // it up after the DOM finishes loading.\n            asyncReady(options);\n        }\n\n        // always clean up after yourself!\n        offReady(init);\n    }\n\n    /**\n     * Given the options from init(), get the iframe or iframe container that\n     * should be used for the Duo Prompt. Returns `null` if nothing was found.\n     */\n    function getPromptElement(options) {\n        var result;\n\n        if (options.iframe && options.iframeContainer) {\n            throwError(\n                'Passing both `iframe` and `iframeContainer` arguments at the' +\n                ' same time is not allowed.'\n            );\n        } else if (options.iframe) {\n            // If we are getting an iframe, try to get it and raise if the\n            // element we find is NOT an iframe.\n            result = getUserDefinedElement(options.iframe);\n            validateIframe(result);\n        } else if (options.iframeContainer) {\n            result = getUserDefinedElement(options.iframeContainer);\n            validateIframeContainer(result);\n        } else {\n            result = document.getElementById('duo_iframe');\n        }\n\n        return result;\n    }\n\n    /**\n     * When given an HTMLElement, return it. When given a string, get an element\n     * with that id, else return null.\n     */\n    function getUserDefinedElement(object) {\n        if (object.tagName) {\n            return object;\n        } else if (typeof object == 'string') {\n            return document.getElementById(object);\n        }\n        return null;\n    }\n\n    /**\n     * Check if the given thing is an iframe.\n     */\n    function isIframe(element) {\n        return (\n            element &&\n            element.tagName &&\n            element.tagName.toLowerCase() === 'iframe'\n        );\n    }\n\n    /**\n     * Throw an error if we are given an element that is NOT an iframe.\n     */\n    function validateIframe(element) {\n        if (element && !isIframe(element)) {\n            throwError(\n                '`iframe` only accepts an iframe element or the id of an' +\n                ' iframe. To use a non-iframe element, use the' +\n                ' `iframeContainer` argument.'\n            );\n        }\n    }\n\n    /**\n     * Throw an error if we are given an element that IS an iframe instead of an\n     * element that we can insert an iframe into.\n     */\n    function validateIframeContainer(element) {\n        if (element && isIframe(element)) {\n            throwError(\n                '`iframeContainer` only accepts a non-iframe element or the' +\n                ' id of a non-iframe. To use a non-iframe element, use the' +\n                ' `iframeContainer` argument on Duo.init().'\n            );\n        }\n    }\n\n    /**\n     * Generate the URL that goes to the Duo Prompt.\n     */\n    function generateIframeSrc() {\n        return [\n            'https://', host, '/frame/web/v1/auth?tx=', encodeURIComponent(duoSig),\n            '&parent=', encodeURIComponent(document.location.href),\n            '&v=2.9'\n        ].join('');\n    }\n\n    /**\n     * This function is called when a message was received from another domain\n     * using the `postMessage` API.  Check that the event came from the Duo\n     * service domain, and that the message is a properly formatted payload,\n     * then perform the post back to the primary service.\n     *\n     * @param event Event object (contains origin and data)\n     */\n    function onReceivedMessage(event) {\n        if (isDuoMessage(event)) {\n            if (event.data.match(DUO_OPEN_WINDOW_FORMAT)) {\n                var url = event.data.substring(\"DUO_OPEN_WINDOW|\".length);\n                if (isValidUrlToOpen(url)) {\n                    // Open the URL that comes after the DUO_WINDOW_OPEN token.\n                    window.open(url, \"_self\");\n                }\n            }\n            else {\n                // the event came from duo, do the post back\n                doPostBack(event.data);\n\n                // always clean up after yourself!\n                offMessage(onReceivedMessage);\n            }\n        }\n    }\n\n    /**\n     * Validate that this passed in URL is one that we will actually allow to\n     * be opened.\n     * @param url String URL that the message poster wants to open\n     * @returns {boolean} true if we allow this url to be opened in the window\n     */\n    function isValidUrlToOpen(url) {\n        if (!url) {\n            return false;\n        }\n\n        var parser = document.createElement('a');\n        parser.href = url;\n\n        if (parser.protocol === \"duotrustedendpoints:\") {\n            return true;\n        } else if (parser.protocol !== \"https:\") {\n            return false;\n        }\n\n        for (var i = 0; i < VALID_OPEN_WINDOW_DOMAINS.length; i++) {\n           if (parser.hostname.endsWith(\".\" + VALID_OPEN_WINDOW_DOMAINS[i]) ||\n                   parser.hostname === VALID_OPEN_WINDOW_DOMAINS[i]) {\n               return true;\n           }\n        }\n        return false;\n    }\n\n    /**\n     * Register a callback to call ready() after the DOM has loaded.\n     */\n    function asyncReady(options) {\n        var callback = function() {\n            var promptElement = getPromptElement(options);\n            if (!promptElement) {\n                throwError(\n                    'This page does not contain an iframe for Duo to use.' +\n                    ' Add an element like' +\n                    ' <iframe id=\"duo_iframe\"></iframe> to this page.'\n                );\n            }\n\n            ready(promptElement, options.iframeAttributes || {});\n\n            // Always clean up after yourself.\n            offReady(callback)\n        };\n\n        onReady(callback);\n    }\n\n    /**\n     * Point the iframe at Duo, then wait for it to postMessage back to us.\n     */\n    function ready(promptElement, iframeAttributes) {\n        if (!host) {\n            host = getDataAttribute(promptElement, 'host');\n\n            if (!host) {\n                throwError(\n                    'No API hostname is given for Duo to use.  Be sure to pass ' +\n                    'a `host` parameter to Duo.init, or through the `data-host` ' +\n                    'attribute on the iframe element.'\n                );\n            }\n        }\n\n        if (!duoSig || !appSig) {\n            parseSigRequest(getDataAttribute(promptElement, 'sigRequest'));\n\n            if (!duoSig || !appSig) {\n                throwError(\n                    'No valid signed request is given.  Be sure to give the ' +\n                    '`sig_request` parameter to Duo.init, or use the ' +\n                    '`data-sig-request` attribute on the iframe element.'\n                );\n            }\n        }\n\n        // if postAction/Argument are defaults, see if they are specified\n        // as data attributes on the iframe\n        if (postAction === '') {\n            postAction = getDataAttribute(promptElement, 'postAction') || postAction;\n        }\n\n        if (postArgument === 'sig_response') {\n            postArgument = getDataAttribute(promptElement, 'postArgument') || postArgument;\n        }\n\n        if (isIframe(promptElement)) {\n            iframe = promptElement;\n            iframe.src = generateIframeSrc();\n        } else {\n            // If given a container to put an iframe in, clean out any children\n            // child elements in case `init()` was called more than once.\n            while (promptElement.firstChild) {\n                // We call `removeChild()` instead of doing `innerHTML = \"\"`\n                // to make sure we unbind any events.\n                promptElement.removeChild(promptElement.firstChild);\n            }\n\n            iframe = document.createElement('iframe');\n\n            // Set the src and all other attributes on the new iframe.\n            iframeAttributes['src'] = generateIframeSrc();\n            for (var name in iframeAttributes) {\n                iframe.setAttribute(name, iframeAttributes[name]);\n            }\n\n            promptElement.appendChild(iframe);\n        }\n\n        // listen for the 'message' event\n        onMessage(onReceivedMessage);\n    }\n\n    /**\n     * We received a postMessage from Duo.  POST back to the primary service\n     * with the response token, and any additional user-supplied parameters\n     * given in form#duo_form.\n     */\n    function doPostBack(response) {\n        // create a hidden input to contain the response token\n        var input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = postArgument;\n        input.value = response + ':' + appSig;\n\n        // user may supply their own form with additional inputs\n        var form = document.getElementById('duo_form');\n\n        // if the form doesn't exist, create one\n        if (!form) {\n            form = document.createElement('form');\n\n            // insert the new form after the iframe\n            iframe.parentElement.insertBefore(form, iframe.nextSibling);\n        }\n\n        // make sure we are actually posting to the right place\n        form.method = 'POST';\n        form.action = postAction;\n\n        // add the response token input to the form\n        form.appendChild(input);\n\n        // away we go!\n        if (typeof submitCallback === \"function\") {\n            submitCallback.call(null, form);\n        } else {\n            form.submit();\n        }\n    }\n\n    return {\n        init: init,\n        _onReady: onReady,\n        _parseSigRequest: parseSigRequest,\n        _isDuoMessage: isDuoMessage,\n        _doPostBack: doPostBack\n    };\n}));\n"],"sourceRoot":""}